version: '3'
services:
  kafka-connect:
    image: confluentinc/cp-kafka-connect:latest
    ports:
      - "8083:8083"
    volumes:
      - ./kafka-ssl:/etc/kafka/secrets
      - ./scripts:/scripts
    environment:
      CONNECT_BOOTSTRAP_SERVERS: your_remote_kafka_host:9092
      CONNECT_REST_ADVERTISED_HOST_NAME: kafka-connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/confluent-hub-components
      CONNECT_SECURITY_PROTOCOL: SSL
      CONNECT_SSL_TRUSTSTORE_LOCATION: /etc/kafka/secrets/ca.crt
      CONNECT_SSL_TRUSTSTORE_TYPE: PEM
      CONNECT_SSL_KEYSTORE_TYPE: PEM
      CONNECT_SSL_KEYSTORE_LOCATION: /etc/kafka/secrets/kafka-connect.crt
      CONNECT_SSL_KEY_LOCATION: /etc/kafka/secrets/kafka-connect.key
      CONNECT_SSL_KEY_PASSWORD: key_password
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8083/ || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    command: 
      - bash
      - -c
      - |
        confluent-hub install --no-prompt confluentinc/kafka-connect-elasticsearch:latest
        /etc/confluent/docker/run &
        /scripts/create-connector.sh

# Create a file named create-connector.sh in a 'scripts' directory with the following content:
# 
# #!/bin/bash
# 
# echo "Waiting for Kafka Connect to start listening on localhost:8083 ..."
# 
# while [ $(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors) -ne 200 ] ; do 
#     echo -e $(date) " Kafka Connect listener HTTP state: " $(curl -s -o /dev/null -w %{http_code} http://localhost:8083/connectors) " (waiting for 200)"
#     sleep 5 
# done
# 
# echo -e "\n--\n+> Creating Kafka Connect Elasticsearch sink"
# 
# curl -X POST http://localhost:8083/connectors -H "Content-Type: application/json" -d '{
#     "name": "elasticsearch-sink",
#     "config": {
#         "connector.class": "io.confluent.connect.elasticsearch.ElasticsearchSinkConnector",
#         "tasks.max": "1",
#         "topics": "topic1,topic2,topic3",
#         "topic.index.map": "topic1:index1,topic2:index2,topic3:index3",
#         "key.ignore": "true",
#         "connection.url": "http://your_elasticsearch_host:9200",
#         "type.name": "_doc",
#         "name": "elasticsearch-sink",
#         "key.converter": "org.apache.kafka.connect.storage.StringConverter",
#         "value.converter": "org.apache.kafka.connect.json.JsonConverter",
#         "value.converter.schemas.enable": "false"
#     }
# }'
# 
# echo "Kafka Connect Elasticsearch sink created."
